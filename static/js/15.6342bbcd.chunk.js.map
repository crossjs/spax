{"version":3,"sources":["blocks/login/UI.tsx"],"names":["UI","props","useGlobalState","role","setRole","history","useHistory","useT","t","useState","username","setUsername","password","setPassword","reveal","setReveal","useEffect","push","fullWidth","margin","variant","label","placeholder","value","onChange","event","target","type","InputProps","endAdornment","position","onClick","py","disabled","size","color","e","preventDefault","alert","display","flexDirection","flexGrow","component","RouterLink","to"],"mappings":"wSAOe,SAASA,EAAGC,GAAa,IAAD,EACbC,YAAuB,QADV,mBAC9BC,EAD8B,KACxBC,EADwB,KAE/BC,EAAUC,cAFqB,EAGvBC,YAAK,SAAXC,EAH6B,sBAKLC,mBAAS,SALJ,mBAK9BC,EAL8B,KAKpBC,EALoB,OAMLF,mBAAS,SANJ,mBAM9BG,EAN8B,KAMpBC,EANoB,OAOTJ,oBAAS,GAPA,mBAO9BK,EAP8B,KAOtBC,EAPsB,KAwBrC,OANAC,qBAAU,WACJb,GACFE,EAAQY,KAAK,OAEd,CAACd,EAAME,IAGR,oCACE,kBAAC,IAAD,CACEa,WAAS,EACTC,OAAO,SACPC,QAAQ,WACRC,MAAOb,EAAE,WACTc,YAAY,iBACZC,MAAOb,EACPc,SAAU,SAAAC,GAAK,OAAId,EAAYc,EAAMC,OAAOH,UAE9C,kBAAC,IAAD,CACEL,WAAS,EACTC,OAAO,SACPC,QAAQ,WACRC,MAAOb,EAAE,YACTmB,KAAMb,EAAS,OAAS,WACxBS,MAAOX,EACPY,SAAU,SAAAC,GAAK,OAAIZ,EAAYY,EAAMC,OAAOH,QAC5CK,WAAY,CAACC,aACX,kBAAC,IAAD,CAAgBC,SAAS,OACvB,kBAAC,IAAD,CACEC,QAAS,kBAAMhB,GAAWD,KAC1BA,EAAS,kBAAC,IAAD,MAAiB,kBAAC,IAAD,WAIlC,kBAAC,IAAD,CACEkB,GAAI,GACJ,kBAAC,IAAD,CACEC,WAAYvB,GAAYE,GACxBM,WAAS,EACTgB,KAAK,QACLd,QAAQ,YACRe,MAAM,UACNJ,QAlDR,SAAsBK,GACpBA,EAAEC,iBACE3B,GAAYE,EACdR,EAAQM,GAER4B,MAAM,4BA8CH,kBAAC,IAAD,MAPD,IAOkB9B,EAAE,WAEtB,kBAAC,IAAD,CACE+B,QAAQ,OACRC,cAAc,OACd,kBAAC,IAAD,CAAKC,SAAU,GACb,kBAAC,IAAD,CAAMC,UAAWC,IAAYC,GAAG,aAAapC,EAAE,cAEjD,kBAAC,IAAD,CAAKiC,SAAU,GACb,kBAAC,IAAD,CAAMC,UAAWC,IAAYC,GAAG,WAAWpC,EAAE","file":"static/js/15.6342bbcd.chunk.js","sourcesContent":["import { Box, Button, IconButton, InputAdornment, Link, TextField } from \"@material-ui/core\";\nimport { Fingerprint, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { useGlobalState } from \"@spax/hooks\";\nimport { useT } from \"@spax/i18n\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\n\nexport default function UI(props: any) {\n  const [role, setRole] = useGlobalState<string>(\"role\");\n  const history = useHistory();\n  const [ t ] = useT(\"Theme\");\n\n  const [username, setUsername] = useState(\"admin\");\n  const [password, setPassword] = useState(\"admin\");\n  const [reveal, setReveal] = useState(false);\n\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    if (username && password) {\n      setRole(username);\n    } else {\n      alert(\"Please input username!\");\n    }\n  }\n\n  useEffect(() => {\n    if (role) {\n      history.push(\"/\");\n    }\n  }, [role, history]);\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        label={t(\"Account\")}\n        placeholder=\"admin or guest\"\n        value={username}\n        onChange={event => setUsername(event.target.value)}\n      />\n      <TextField\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        label={t(\"Password\")}\n        type={reveal ? \"text\" : \"password\"}\n        value={password}\n        onChange={event => setPassword(event.target.value)}\n        InputProps={{endAdornment:\n          <InputAdornment position=\"end\">\n            <IconButton\n              onClick={() => setReveal(!reveal)}\n            >{reveal ? <Visibility /> : <VisibilityOff />}</IconButton>\n          </InputAdornment>,\n        }}\n      />\n      <Box\n        py={1}>\n        <Button\n          disabled={!(username && password)}\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmit}\n        ><Fingerprint /> {t(\"Login\")}</Button>\n      </Box>\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\">\n        <Box flexGrow={1}>\n          <Link component={RouterLink} to=\"/register\">{t(\"Register\")}</Link>\n        </Box>\n        <Box flexGrow={0}>\n          <Link component={RouterLink} to=\"/forgot\">{t(\"Forgot your password?\")}</Link>\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"sourceRoot":""}