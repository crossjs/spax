{"version":3,"sources":["../node_modules/@material-ui/core/esm/Badge/Badge.js","../node_modules/@material-ui/icons/esm/Favorite.js","../node_modules/@material-ui/icons/esm/Add.js","components/GlobalCount.tsx","blocks/hooks/global/UI.tsx"],"names":["Badge","forwardRef","props","ref","_props$anchorOrigin","anchorOrigin","vertical","horizontal","badgeContent","children","classes","className","_props$color","color","_props$component","component","ComponentProp","invisibleProp","invisible","_props$max","max","_props$overlap","overlap","_props$showZero","showZero","_props$variant","variant","other","displayValue","concat","createElement","root","badge","dot","theme","position","display","verticalAlign","flexShrink","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","backgroundColor","palette","textColor","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorError","error","RADIUS_DOT","anchorOriginTopRightRectangle","top","right","transform","transformOrigin","anchorOriginBottomRightRectangle","bottom","anchorOriginTopLeftRectangle","left","anchorOriginBottomLeftRectangle","anchorOriginTopRightCircle","anchorOriginBottomRightCircle","anchorOriginTopLeftCircle","anchorOriginBottomLeftCircle","leavingScreen","name","d","GlobalCount","useGlobalState","count","setCount","Paper","Box","my","p","Typography","title","Button","onClick","prevCount","Remove","Favorite","Add","UI"],"mappings":"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","file":"static/js/7.f681403f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 3;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS_STANDARD * 2,\n      lineHeight: 1,\n      padding: '0 6px',\n      height: RADIUS_STANDARD * 2,\n      borderRadius: RADIUS_STANDARD,\n      backgroundColor: theme.palette.color,\n      color: theme.palette.textColor,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginTopRightRectangle: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomRightRectangle: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginTopLeftRectangle: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomLeftRectangle: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circle\"`. */\n    anchorOriginTopRightCircle: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circle\"`. */\n    anchorOriginBottomRightCircle: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circle\"`. */\n    anchorOriginTopLeftCircle: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circle\"`. */\n    anchorOriginBottomLeftCircle: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  };\n};\nvar Badge = React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {\n    invisible = true;\n  }\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[\"\".concat(anchorOrigin.horizontal).concat(capitalize(anchorOrigin.vertical), \"}\")], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible, {\n      dot: classes.dot\n    }[variant])\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   */\n  overlap: PropTypes.oneOf(['circle', 'rectangle']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['dot', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import { Badge, Box, Button, Paper, Typography } from \"@material-ui/core\";\nimport { Add, Favorite, Remove } from \"@material-ui/icons\";\nimport { useGlobalState } from \"@spax/hooks\";\nimport React from \"react\";\n\nconst GlobalCount = ({ children, ...props }: any): React.ReactElement => {\n  const [count, setCount] = useGlobalState(\"GlobalCount\");\n  return (\n    <Paper\n      className={props.className}>\n      <Box my={2} p={2}>\n        <Typography variant=\"h1\">{props.title}</Typography>\n        <Button\n          color=\"primary\"\n          onClick={() => setCount(prevCount => prevCount - 1)}\n        ><Remove /></Button>\n        <Badge badgeContent={count} max={10} color=\"primary\">\n          <Favorite />\n        </Badge>\n        <Button\n          color=\"primary\"\n          onClick={() => setCount(prevCount => prevCount + 1)}\n        ><Add /></Button>\n      </Box>\n      {children}\n    </Paper>\n  );\n};\n\nexport default GlobalCount;\n","import { Box, Typography } from \"@material-ui/core\";\nimport GlobalCount from \"components/GlobalCount\";\nimport React from \"react\";\n\nexport default function UI(props: any): React.ReactElement {\n  return (\n    <Box>\n      <Typography variant=\"h1\">{props.title}</Typography>\n      <GlobalCount {...props} />\n      <GlobalCount {...props} />\n    </Box>\n  );\n}\n"],"sourceRoot":""}